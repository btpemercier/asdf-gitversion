#!/usr/bin/env bash

set -euo pipefail

current_script_path=${BASH_SOURCE[0]}
plugin_dir=$(dirname "$(dirname "$current_script_path")")

# shellcheck source=./lib/utils.bash
source "${plugin_dir}/lib/utils.bash"

mkdir -p "$ASDF_DOWNLOAD_PATH"

release_file="$ASDF_DOWNLOAD_PATH/$TOOL_NAME-$ASDF_INSTALL_VERSION.tar.gz"

# Download tar.gz file to the download directory
get_arch() {
    local arch
    arch=$(uname -m | tr '[:upper:]' '[:lower:]')
    case ${arch} in
        x86_64 | amd64) arch="x64" ;;
        aarch64 | arm64) arch="arm64" ;;
        *)
            echo "unsupported architecture '$(uname -m)'" 1>&2
            exit 1
        ;;
    esac

    echo "${arch}"
}

get_platform() {
    local plat
    plat=$(uname | tr '[:upper:]' '[:lower:]')
    case ${plat} in
        darwin)
            plat='osx'
        ;;
        linux)
            plat='linux'
        ;;
        windows)
            plat='win'
        ;;
    esac

    echo "${plat}"
}

arch="$(get_arch)"
platform="$(get_platform)"

# Download tar.gz file to the download directory
download_release "$ASDF_INSTALL_VERSION" "$release_file" "$arch" "$platform"

#  Extract contents of tar.gz file into the download directory
tar -xzf "$release_file" -C "$ASDF_DOWNLOAD_PATH" --strip-components=1 || fail "Could not extract $release_file"

# Remove the tar.gz file since we don't need to keep it
rm "$release_file"
